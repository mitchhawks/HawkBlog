@model IEnumerable<HawkBlog.Models.Post>
@{
    ViewData["Title"] = "Blog";

    bool isFirstPage = false;
    bool isLastPage = false;

    Category cat = ViewData["CurrentCat"] as Category;

    string searchTerm = ViewData["SearchQuery"] as string;

    if (int.Parse(ViewData["currentPage"].ToString()) == 1)
    {
        isFirstPage = true;
    }
    if (ViewData["currentPage"].ToString() == ViewData["maxPages"].ToString())
    {
        isLastPage = true;
    }

    int nextPage = int.Parse(ViewData["currentPage"].ToString()) + 1;
    int prevPage = int.Parse(ViewData["currentPage"].ToString()) - 1;
}

<div class="blog-header">
    <div class="container">
        @if (cat == null && searchTerm == null)
        {
            <h1 class="blog-title">HawkBlog</h1>
            <p class="lead blog-description">A simple blog system built with ASP.Net Core</p>
        }
        else if (searchTerm != null)
        {
            <h1 class="blog-title">Search</h1>
            <p class="lead blog-description">Results for "@searchTerm"</p>
        }
        else
        { 
            <h1 class="blog-title">@cat.CatName</h1>
            <p class="lead blog-description">@cat.CatDesc</p>
        }
    </div>
</div>

<div class="row">
    <div class="col-sm-8 blog-main">
        @await Html.PartialAsync("_PostList", Model)
        <nav class="blog-pagination">
            @if (!isFirstPage)
            {
                <a class="btn btn-outline-secondary" href="?page=@prevPage">Previous</a>
            }
            @if (!isLastPage)
            {
                <a class="btn btn-outline-primary" href="?page=@nextPage">Next</a>
            }
        </nav>
        @if (isLastPage)
        {
            <h5><br />End of Results</h5>
        }
    </div><!-- /.blog-main -->

    @await Html.PartialAsync("_Sidebar")

</div><!-- /.row -->